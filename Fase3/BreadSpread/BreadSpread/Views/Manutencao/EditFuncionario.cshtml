@model BreadSpread.Models.Funcionario

@{
	ViewBag.Title = "EditFuncionario";
	Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

		<div id="page-wrapper">
			<div class="row">
				<div class="col-lg-12">
					<h1 class="page-header">Funcionário</h1>
				</div>
				<!-- /.col-lg-12 -->
			</div>
			<!-- /.row -->
			<div class="row">
				<div class="col-lg-12">
					<div class="panel panel-default ">
						<!-- /.panel-heading -->
						<div class="panel-body">
						@using (Html.BeginForm())
						{
							@Html.AntiForgeryToken()

							<div class="form-horizontal">
								<h4>@Html.DisplayFor(model => model.idFunc)</h4>
								<hr />
								@Html.ValidationSummary(true, "", new { @class = "text-danger" })
								@Html.HiddenFor(model => model.idFunc)

								<div class="form-group">
									@Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
									<div class="col-md-10">
										@Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control", type="text"} })
										@Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(model => model.dataNasc, htmlAttributes: new { @class = "control-label col-md-2" })
									<div class="col-md-10">
										@Html.EditorFor(model => model.dataNasc, new { htmlAttributes = new { @class = "form-control" } })
										@Html.ValidationMessageFor(model => model.dataNasc, "", new { @class = "text-danger" })
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(model => model.contacto, htmlAttributes: new { @class = "control-label col-md-2"  })
									<div class="col-md-10">
										@Html.EditorFor(model => model.contacto, new { htmlAttributes = new { @class = "form-control", type = "number" } })
										@Html.ValidationMessageFor(model => model.contacto, "", new { @class = "text-danger" })
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(model => model.rua, htmlAttributes: new { @class = "control-label col-md-2" })
									<div class="col-md-10">
										@Html.EditorFor(model => model.rua, new { htmlAttributes = new { @class = "form-control",type="text" } })
										@Html.ValidationMessageFor(model => model.rua, "", new { @class = "text-danger" })
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(model => model.numPorta, htmlAttributes: new { @class = "control-label col-md-2" })
									<div class="col-md-10">
										@Html.EditorFor(model => model.numPorta, new { htmlAttributes = new { @class = "form-control", type = "number" } })
										@Html.ValidationMessageFor(model => model.numPorta, "", new { @class = "text-danger" })
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(model => model.codPostal, htmlAttributes: new { @class = "control-label col-md-2" })
									<div class="col-md-10">
										@Html.EditorFor(model => model.codPostal, new { htmlAttributes = new { @class = "form-control", type = "text" } })
										@Html.ValidationMessageFor(model => model.codPostal, "", new { @class = "text-danger" })
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(model => model.cidade, htmlAttributes: new { @class = "control-label col-md-2" })
									<div class="col-md-10">
										@Html.EditorFor(model => model.cidade, new { htmlAttributes = new { @class = "form-control", type = "text" } })
										@Html.ValidationMessageFor(model => model.cidade, "", new { @class = "text-danger" })
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(model => model.estadoConta, htmlAttributes: new { @class = "control-label col-md-2" })
									<div class="col-md-10">
										@Html.EditorFor(model => model.estadoConta, new { htmlAttributes = new { @class = "form-control", type = "text" } })
										@Html.ValidationMessageFor(model => model.estadoConta, "", new { @class = "text-danger" })
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(model => model.distribuicao, htmlAttributes: new { @class = "control-label col-md-2" })
									<div class="col-md-10">
										@Html.EditorFor(model => model.distribuicao, new { htmlAttributes = new { @class = "form-control", type = "text" } })
										@Html.ValidationMessageFor(model => model.distribuicao, "", new { @class = "text-danger" })
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(model => model.freguesia, htmlAttributes: new { @class = "control-label col-md-2", type = "text" })
									<div class="col-md-10">
										@Html.EditorFor(model => model.freguesia, new { htmlAttributes = new { @class = "form-control" } })
										@Html.ValidationMessageFor(model => model.freguesia, "", new { @class = "text-danger" })
									</div>
								</div>
								<div class="form-group">
									<div class="col-md-offset-2 col-md-10">
										<input type="hidden" name="password" value=@Model.password />
										<input type="submit" value="Alterar" class="btn btn-success btn-lg" />
										@Html.ActionLink("Voltar", "IndexFuncionario", null, new { @class = "btn btn-lg btn-primary" })
									</div>
								</div>
							</div>
}

						</div>
						<!-- /.panel-body -->
					</div>
					<!-- /.panel -->
				</div>
				<!-- /.col-lg-12 -->
			</div>

		</div>
		<!-- /#page-wrapper -->

	